// Generated by Dagger (https://dagger.dev).
package com.aci.acinews.di.module;

import android.content.Context;
import com.aci.acinews.data.repository.NewsRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RepositoryModule_ProvideNewsRepositoryFactory implements Factory<NewsRepository> {
  private final RepositoryModule module;

  private final Provider<Context> contextProvider;

  public RepositoryModule_ProvideNewsRepositoryFactory(RepositoryModule module,
      Provider<Context> contextProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
  }

  @Override
  public NewsRepository get() {
    return provideNewsRepository(module, contextProvider.get());
  }

  public static RepositoryModule_ProvideNewsRepositoryFactory create(RepositoryModule module,
      Provider<Context> contextProvider) {
    return new RepositoryModule_ProvideNewsRepositoryFactory(module, contextProvider);
  }

  public static NewsRepository provideNewsRepository(RepositoryModule instance, Context context) {
    return Preconditions.checkNotNullFromProvides(instance.provideNewsRepository(context));
  }
}
